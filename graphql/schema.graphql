### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Brands {
  id: String
  imageURI: String
  name: String
  slug: String
}

type Category {
  createdAt: String
  id: String
  main: [Items]
  name: String
  parentId: String
  slug: String
  sub: [Items]
  type: CategoryTypesEnums
}

enum CategoryTypesEnums {
  MAIN
  SUB
}

type Items {
  brand: Brands
  brand_id: String
  details: String
  featured: Boolean
  galleryImages: [String]
  hot: Boolean
  id: String
  imageURI: String
  maincategory: Category
  maincategory_id: String
  name: String
  new_arrival: Boolean
  price: Float
  quantity: Int
  short_description: String
  slug: String
  subCategory: Category
  subCategory_id: String
}

type Mutation {
  createBrands(imageURI: String, name: String!, slug: String!): Brands
  createCategory(imageURI: String, name: String!, parentSlug: String, slug: String!, type: CategoryTypesEnums!): Category
  createItems(brand_id: String!, details: String, featured: Boolean, hot: Boolean, maincategory_id: String!, name: String!, new_arrival: Boolean, price: Float!, quntity: Int!, short_description: String, slug: String!, subCategory_id: String!): Items
  createUser(email: String!, imageURI: String, name: String!, number: String!): User
}

type Query {
  allUsers: [User]
  brands: [Brands]
  categoryProduct(slug: String!): Category
  item(id: String!): Items
  items(new_arrival: Boolean): [Items]
  mainCategories: [Category]
  user(email: String!): User
}

type User {
  email: String
  id: String
  name: String
  number: String
}